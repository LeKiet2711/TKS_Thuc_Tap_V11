@inherits FBase;

@Layout_Default_Filter(grdData, "Phieu_Nhap_Kho_Template.xlsx")
<div style="padding-top: 10px;"></div>

<div class="row">
	<div class="col-lg-12">
		@((MarkupString)r_strError)

		<TelerikGrid Data="@v_arrData" Height="calc(100vh - 170px)" Resizable="true" Reorderable="true" @ref="@grdData">
			<GridExport>
				<GridExcelExport FileName="Phieu_Nhap_Kho_Export" AllPages="true" />
				<GridCsvExport FileName="Phieu_Nhap_Kho_Export" AllPages="true" />
			</GridExport>
			<GridColumns>
				<GridCheckboxColumn SelectAll="true" CheckBoxOnlySelection="true" Width="30px"></GridCheckboxColumn>
				<GridColumn Width="60px">
					<Template>
						<button class="btn btn-link" @onclick="@(()=> Open_Info((context as CXNK_Nhap_Kho).Auto_ID))">
							<i class="mdi mdi-eye" style="color: purple;"></i>
						</button>
						&nbsp;
						<button class="btn btn-link" data-bs-toggle="dropdown" aria-expanded="false">
							<i class="mdi mdi-cog-outline" style="color: purple;"></i>
						</button>
						<ul class="dropdown-menu">
							@if (r_objChuc_Nang.Is_Have_Edit_Permission == true)
							{
								<li>
									<button class="dropdown-item" type="button" @onclick="@(()=> Open_Edit((context as CXNK_Nhap_Kho).Auto_ID))"><i class="ri-edit-2-line align-bottom me-1"></i> &nbsp; @Get_Language_Data_Field("Hiệu chỉnh")</button>
								</li>
							}
							@if (r_objChuc_Nang.Is_Have_Edit_Permission == true)
							{
								<li>
									<button class="dropdown-item" type="button" @onclick="@(()=> Open_Edit_Default((context as CXNK_Nhap_Kho).Auto_ID))"><i class="ri-edit-2-line align-bottom me-1"></i> &nbsp; @Get_Language_Data_Field("Hiệu chỉnh chi tiết")</button>
								</li>
							}
							@if (r_objChuc_Nang.Is_Have_Delete_Permission == true)
							{
								<li>
									<button class="dropdown-item" type="button" @onclick="@(()=> Delete_Data((context as CXNK_Nhap_Kho).Auto_ID))"><i class="ri-delete-bin-line align-bottom me-1"></i> &nbsp; @Get_Language_Data_Field("Xóa")</button>
								</li>
							}
							<li>
								<a class="dropdown-item" href="reportphieunhap/@((context as CXNK_Nhap_Kho).Auto_ID)"><i class="ri-printer-fill">&nbsp&nbsp&nbsp; @Get_Language_Data_Field("In báo cáo")</i></a>
							</li>
						</ul>

					</Template>
				</GridColumn>
				@if (CCache_Grid_UI_Global.List_Data_By_Code("2011", "grdData").Count > 0)
				{
					<FCommon_General_Col_Grid m_strFCode="2011" m_strTen_Grid="grdData"></FCommon_General_Col_Grid>
				}
				else
				{
					<GridColumn Field="So_Phieu_Nhap_Kho" Title="Số Phiếu Nhập Kho" Width="100px"></GridColumn>
					<GridColumn Field="Ten_NCC" Title="Nhà Cung Cấp" Width="100px"></GridColumn>
					<GridColumn Field="Ten_Kho" Title="Kho" Width="100px"></GridColumn>
					<GridColumn Field="Ngay_Nhap_Kho" Title="Ngày Nhập Kho" Width="120px"></GridColumn>
					<GridColumn Field="Ghi_Chu" Title="Ghi Chú" Width="200px"></GridColumn>
					<GridColumn Field="" Title=""><FooterTemplate Context="Footer"></FooterTemplate></GridColumn>
				}
			</GridColumns>
		</TelerikGrid>
	</div>
</div>

@if (r_bIs_Show_Import_Excel == true)
{
	<FCommon_Import_Excel r_objImport_Excel="@r_objImport_Excel" OnClose="@Close_Import_Excel"></FCommon_Import_Excel>
}

@if (r_bIs_Show_Info == true)
{
	<F2011_2_Phieu_Nhap_Kho_Info r_iAuto_ID="@r_iAuto_ID" OnClose="@Close_Info"></F2011_2_Phieu_Nhap_Kho_Info>
}

@if (r_bIs_Show_Help_Guide == true)
{
	<FCommon_Help_Guide m_strFCode="@r_strActive_Function_Code" OnClose="@Close_Helpguide"></FCommon_Help_Guide>
}

@if (r_bIs_Show_Edit == true)
{
	<F2011_3_Phieu_Nhap_Kho_Edit r_iAuto_ID="@r_iAuto_ID" OnClose="@Close_Edit"></F2011_3_Phieu_Nhap_Kho_Edit>
}

@if (r_bIs_Show_Edit_default == true)
{
	<F2011_33_Phieu_Nhap_Kho_Edit r_iAuto_ID="@r_iAuto_ID" OnClose="@Close_Edit"></F2011_33_Phieu_Nhap_Kho_Edit>
}

@if (r_bIs_Show_Message_Info == true)
{
	<FCommon_Message_Info r_strMessage_Header="@r_strMessage_Header" r_strMessage_Info="@r_strMessage_Info" OnClose="@Close_Message_Info"></FCommon_Message_Info>
}

@code {
    public List<CXNK_Nhap_Kho> v_arrData = new();
    TelerikGrid<CXNK_Nhap_Kho> grdData = new();

    protected override void Init_Data()
    {

    }

    protected override void Load_Data()
    {
        CXNK_Nhap_Kho_Controller v_objCtrData = new();

        //Format lại grid đúng chuẩn, Đặt trước hàm load dữ liệu vì nó sẽ chạy nhanh hơn
        Format_Grid(grdData);

        v_arrData = v_objCtrData.FQ_718_NK_sp_sel_List_By_Created(r_objFilter.Date_From, r_objFilter.Date_To);
    }

    protected override void Delete_Data_Entry(long p_iAuto_ID)
    {
        CXNK_Nhap_Kho_Controller v_objCtrData = new();
        CXNK_Nhap_Kho_Raw_Data_Controller v_objCtrDataRD = new();

        // Đoạn code lưu key cho việc tracking log CRUD, vui lòng đừng xóa
        CXNK_Nhap_Kho v_objData = v_objCtrData.FQ_718_NK_sp_sel_Get_By_ID(p_iAuto_ID);
        if (v_objData != null)
            r_strDelete_Key = v_objData.So_Phieu_Nhap_Kho;
        // End tracking

        //Store Update tất cả chi tiết phiếu nhập deleted = 1 có mã nhập kho bằng mã nhập kho đang xóa
        v_objCtrDataRD.F_745_NKRD_sp_del_Delete_List_By_ID(p_iAuto_ID, r_strActive_User_Name, r_strActive_Function_Code);
        v_objCtrData.FQ_718_NK_sp_del_Delete_By_ID(p_iAuto_ID, r_strActive_User_Name, r_strActive_Function_Code);
    }

    protected override void Import_Excel_Entry(CExcel_Controller v_objCtrlExcel, ref int p_iCount_Success, ref int p_iCount_Error)
    {
        CXNK_Nhap_Kho_Controller v_objCtrData = new();
        CXNK_Nhap_Kho_Raw_Data_Controller v_objCtrDataRD = new();

        StringBuilder v_sbError = new StringBuilder();
        SqlConnection v_conn = null;
        SqlTransaction v_trans = null;
        CXNK_Nhap_Kho v_objData = null; // Chỉ có một đối tượng CXNK_Nhap_Kho
        List<CXNK_Nhap_Kho_Raw_Data> v_listNhapKhoRawData = new List<CXNK_Nhap_Kho_Raw_Data>();

        try
        {
            DataTable v_dt = v_objCtrlExcel.List_Range_Value_To_End(0, "A2", "H");
            int v_iCount = 1;
            bool v_bHasError = false; // Biến để theo dõi lỗi

            // Loại bỏ các dòng trống
            for (int v_i = v_dt.Rows.Count - 1; v_i >= 0; v_i--)
                if (v_dt.Rows[v_i][0].ToString().Trim() == "" && v_dt.Rows[v_i][1].ToString().Trim() == "")
                    v_dt.Rows.RemoveAt(v_i);

            // Kiểm tra lỗi trước khi chèn dữ liệu
            foreach (DataRow v_row in v_dt.Rows)
            {
                v_iCount++;

                try
                {
                    if (CCache_San_Pham.Get_Data_By_Code(CUtility.Convert_To_String(v_row[0])) == null)
                        throw new Exception(Get_Language_Data_Field("Mã sản phẩm không hợp lệ."));
                    if (CUtility.Convert_To_Int32(v_row[1]) <= 0)
                        throw new Exception(Get_Language_Data_Field("Số lượng nhập không hợp lệ."));
                    if (CUtility.Convert_To_Int32(v_row[2]) <= 0)
                        throw new Exception(Get_Language_Data_Field("Đơn giá nhập không hợp lệ."));

                    // Import Phiếu Nhập kho
                    if (v_iCount == 2) // Chỉ tạo một phiếu nhập khi import từ excel
                    {
                        v_objData = new CXNK_Nhap_Kho();
                        v_objData.So_Phieu_Nhap_Kho = CUtility.Convert_To_String(v_row[3]);

                        // Import dữ liệu từ excel để so sánh với combobox
                        if (CCache_NCC.Get_Data_By_Code(CUtility.Convert_To_String(v_row[4])) == null)
                        {
                            throw new Exception(Get_Language_Data_Field("Vui lòng nhập mã Nhà Cung Cấp chính xác ") + "<br/>");
                        }
                        if (CCache_Kho.Get_Data_By_Code(CUtility.Convert_To_String(v_row[5])) == null)
                        {
                            throw new Exception(Get_Language_Data_Field("Vui lòng nhập mã Kho chính xác ") + "<br/>");
                        }

                        string v_strNgay_Nhap_Kho = CUtility.Convert_To_String(v_row[6]);
                        if (v_strNgay_Nhap_Kho == "")
                        {
                            v_objData.Ngay_Nhap_Kho = DateTime.Now.Date;
                        }
                        else
                        {
                            DateTime? tempDate = CUtility.Convert_To_DateTime(v_strNgay_Nhap_Kho);
                            v_objData.Ngay_Nhap_Kho = tempDate?.Date;
                        }
                        v_objData.NCC_ID = CCache_NCC.Get_Data_By_Code(CUtility.Convert_To_String(v_row[4])).Auto_ID;
                        v_objData.Kho_ID = CCache_Kho.Get_Data_By_Code(CUtility.Convert_To_String(v_row[5])).Auto_ID;
                        v_objData.Ghi_Chu = CUtility.Convert_To_String(v_row[7]);
                        v_objData.Last_Updated_By = r_strActive_User_Name;
                        v_objData.Last_Updated_By_Function = r_strActive_Function_Code;
                    }

                    CXNK_Nhap_Kho_Raw_Data v_objDataRD = new CXNK_Nhap_Kho_Raw_Data();
                    v_objDataRD.Nhap_Kho_ID = v_objData.Auto_ID; // Sử dụng Auto_ID tạm thời, sẽ cập nhật sau khi chèn

                    // Import dữ liệu để so sánh với combobox
                    v_objDataRD.San_Pham_ID = CCache_San_Pham.Get_Data_By_Code(CUtility.Convert_To_String(v_row[0])).Auto_ID;
                    v_objDataRD.SL_Nhap = CUtility.Convert_To_Int32(v_row[1]);
                    v_objDataRD.Don_Gia_Nhap = CUtility.Convert_To_Int32(v_row[2]);
                    v_objDataRD.Last_Updated_By = r_strActive_User_Name;
                    v_objDataRD.Last_Updated_By_Function = r_strActive_Function_Code;

                    v_listNhapKhoRawData.Add(v_objDataRD);
                }
                catch (Exception ex)
                {
                    v_sbError.AppendLine(Get_Language_Data_Field("Dòng") + " " + v_iCount.ToString() + " " + Get_Language_Data_Field("có lỗi") + ": " + ex.Message + "<br/>");
                    v_bHasError = true;
                    break;
                }
            }

            if (!v_bHasError)
            {
                // Tạo kết nối và bắt đầu giao dịch
                v_conn = CSqlHelper.CreateConnection(CConfig.TKS_Thuc_Tap_V11_Conn_String);
                v_conn.Open();
                v_trans = v_conn.BeginTransaction();

                try
                {
                    // Chèn dữ liệu phiếu nhập kho
                    if (v_objData != null)
                    {
                        v_objData.Auto_ID = v_objCtrData.FQ_718_NK_sp_ins_Insert(v_conn, v_trans, v_objData);

                        // Cập nhật ID thực sự sau khi chèn
                        foreach (var v_objDataRD in v_listNhapKhoRawData)
                        {
                            v_objDataRD.Nhap_Kho_ID = v_objData.Auto_ID;
                        }
                    }

                    // Chèn dữ liệu chi tiết phiếu nhập kho
                    foreach (var v_objDataRD in v_listNhapKhoRawData)
                    {
                        v_objDataRD.Auto_ID = v_objCtrDataRD.FQ_719_NKRD_sp_ins_Insert(v_conn, v_trans, v_objDataRD);
                        p_iCount_Success++;
                    }

                    v_trans.Commit();
                }
                catch (Exception ex)
                {
                    v_trans.Rollback();
                    v_sbError.AppendLine(ex.Message);
                    p_iCount_Success = 0;
                }
            }

            p_iCount_Error = v_dt.Rows.Count - p_iCount_Success;
            string v_strMessage = CCommonFunction.Set_Success_MessageBox(Get_Language_Data_Field("Thêm mới") + " " + p_iCount_Success.ToString() + " " + Get_Language_Data_Field("dòng thành công."));
            if (v_sbError.ToString() != "")
                v_strMessage += CCommonFunction.Set_Error_MessageBox(v_sbError.ToString());

            Open_Message_Info(Get_Language_Data_Field("Thông báo Import Excel"), v_strMessage);
        }
        catch (Exception ex)
        {
            if (v_trans != null)
                v_trans.Rollback();
            Open_Message_Info(Get_Language_Data_Field("Thông báo Import Excel"), ex.Message);
        }
        finally
        {
            if (v_trans != null)
                v_trans.Dispose();

            if (v_conn != null)
                v_conn.Close();
        }
    }




}