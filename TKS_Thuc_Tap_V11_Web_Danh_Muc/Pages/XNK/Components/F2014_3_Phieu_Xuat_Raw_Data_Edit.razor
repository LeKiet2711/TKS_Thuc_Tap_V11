@inherits FBase_Edit;

<div class="modal fade show" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-left: 0px; background-color: rgba(10, 10, 10, .8);">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-light">
				@if (r_iAuto_ID != 0)
				{
					<h5 class="modal-title">@Get_Language_Data_Field("Hiệu chỉnh")</h5>
				}
				else
				{
					<h5 class="modal-title">@Get_Language_Data_Field("Thêm mới")</h5>
				}
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="@(()=> Modal_Cancel())">
				</button>
			</div>

			@((MarkupString)r_strError)

			<EditForm Model="@m_objData">
				<div class="modal-body">
					<div class="row">
						<div class="col-lg-12">
							@if(r_bUpdate==false){
							<div class="row mb-1">
								<div class="col-lg-4 col-form-label">
									<label class="form-label">@Get_Language_Data_Field("Sản phẩm"):</label>
								</div>
								<div class="col-lg-8">
									<FControl_San_Pham_Combo @bind-BindingValue="m_objData.San_Pham_ID"></FControl_San_Pham_Combo>

								</div>
								</div>
							}
							else
							{
								<div class="row mb-1">
									<div class="col-lg-4 col-form-label">
										<label class="form-label">@Get_Language_Data_Field("Sản phẩm"):</label>
									</div>
									<div class="col-lg-8">
										<input @bind="@m_objData.Ten_San_Pham" class="form-control" readonly></input>
									</div>

								</div>
							}
							<div class="row mb-1">
								<div class="col-lg-4 col-form-label">
									<label class="form-label">@Get_Language_Data_Field("Số lượng xuất"):</label>
								</div>
								<div class="col-lg-8">
									<input type="number" @bind="@m_objData.SL_Xuat" class="form-control">

								</div>
							</div>

							<div class="row mb-1">
								<div class="col-lg-4 col-form-label">
									<label class="form-label">@Get_Language_Data_Field("Đơn giá xuất"):</label>
								</div>
								<div class="col-lg-8">
									<input type="number" @bind="@m_objData.Don_Gia_Xuat" class="form-control">
								</div>
							</div>

						</div>
					</div>

				</div>
			</EditForm>

			<div class="modal-footer">
				<button type="button" class="btn btn-primary" @onclick="@Save_Data">@Get_Language_Data_Field("Lưu Thay Đổi")</button>
			</div>
		</div>
	</div>
</div>

@code {
	private CXNK_Xuat_Kho_Raw_Data m_objData = new();
	public List<CXNK_Xuat_Kho_Raw_Data> m_LstXuatKho = new List<CXNK_Xuat_Kho_Raw_Data>();
	private bool isPopupVisible = false;
	public bool checkSanPham = false;
	public bool checkSoLuong = false;
	public bool checkDonGia = false;
	public int auto = 0;
	public F2014_1_Phieu_Xuat_Raw_Data_List v_objloadListXKRD;
	//Tạo route để phân luồng 2 loại thêm bảng tạm (Trên Array) và thêm vào database
	[Parameter]
	public int route { get; set; }

	[Parameter]
	public EventCallback<CXNK_Xuat_Kho_Raw_Data> OnSaveCTPX { get; set; }

	//Tạo một object DataEdit để nhận dữ liệu từ List sau đó mới đẩy vào cho objData
	[Parameter]
	public CXNK_Xuat_Kho_Raw_Data m_objDataEdit { get; set; }

	//Event call back onDataAdded dùng để di chuyển về hàm HandleDataAdded tại 33_Edit để load lại v_objloadListdataXKRD (load lại List để hiển thị phần tử mới)
	[Parameter]
	public EventCallback<CXNK_Xuat_Kho_Raw_Data> OnDataAdded { get; set; }

	protected override void Init_Data()
	{

	}

	protected override void Load_Data()
	{
		CXNK_Xuat_Kho_Raw_Data_Controller v_objCtrData = new();
		m_objData = v_objCtrData.FQ_734_XKRD_sp_sel_Get_By_ID(r_iAuto_ID);
		//Gán object của phần tử tương ứng được chọn từ List cho objData để bind lên text
		m_objData = m_objDataEdit;

		if (m_objData == null)
			m_objData = new CXNK_Xuat_Kho_Raw_Data();
		else
		{
			r_bUpdate = true;

			// Đoạn code lưu key cho việc tracking log CRUD, vui lòng đừng xóa
			CXNK_Xuat_Kho_Raw_Data v_objClone = new();
			CUtility.Clone_Entity(m_objData, v_objClone);
			r_objSource = v_objClone;
			// End tracking
		}
	}

	public void Save_List()
	{
		CXNK_Xuat_Kho_Raw_Data v_objectXuatKho = new CXNK_Xuat_Kho_Raw_Data();

		v_objectXuatKho.Ten_San_Pham = CCache_San_Pham.Get_Data_By_ID(m_objData.San_Pham_ID).Ten_San_Pham;
		v_objectXuatKho.San_Pham_ID = m_objData.San_Pham_ID;
		v_objectXuatKho.SL_Xuat = m_objData.SL_Xuat;
		v_objectXuatKho.Don_Gia_Xuat = m_objData.Don_Gia_Xuat;
		m_LstXuatKho.Add(v_objectXuatKho);

	}

	protected override void Add_Data()
	{
		if (route == 1)
		{
			checkSanPham = false;
			checkSoLuong = false;
			checkDonGia = false;
			if (m_objData.San_Pham_ID == 0)
			{
				checkSanPham = true;
			}
			else if (m_objData.SL_Xuat == 0)
			{
				checkSoLuong = true;
			}
			else if (m_objData.Don_Gia_Xuat == 0)
			{
				checkDonGia = true;
			}
			else
			{
				CXNK_Xuat_Kho_Raw_Data v_objectXuatKho = new CXNK_Xuat_Kho_Raw_Data();
				v_objectXuatKho.Auto_ID = auto + 1;
				v_objectXuatKho.San_Pham_ID = m_objData.San_Pham_ID;
				v_objectXuatKho.Ten_San_Pham = CCache_San_Pham.Get_Data_By_ID(m_objData.San_Pham_ID).Ten_San_Pham;
				v_objectXuatKho.SL_Xuat = m_objData.SL_Xuat;
				v_objectXuatKho.Don_Gia_Xuat = m_objData.Don_Gia_Xuat;

				// Gọi event callback để truyền thông tin về form chính
				OnSaveCTPX.InvokeAsync(v_objectXuatKho);
				StateHasChanged();
				Load_Data_Init();
				Modal_Cancel();

				CXNK_Xuat_Kho_Raw_Data v_objClone = new();
				CUtility.Clone_Entity(m_objData, v_objClone);
				r_objDes = v_objClone;
			}
		}
		else
		{
			CXNK_Xuat_Kho_Raw_Data_Controller v_objCtrData = new();
			m_objData.Last_Updated_By = r_strActive_User_Name;
			m_objData.Last_Updated_By_Function = r_strActive_Function_Code;
			m_objData.Xuat_Kho_ID = r_iAuto_ID;
			m_objData.Auto_ID = r_iAuto_ID = v_objCtrData.FQ_734_XKRD_sp_ins_Insert(m_objData);

			r_strAdd_Key = m_objData.AutoID.ToString();
			OnDataAdded.InvokeAsync(m_objData);
			StateHasChanged();
			Load_Data_Init();
			Modal_Cancel();
		}
	}

	protected override void Update_Data()
	{
		if (route == 1)
		{
			r_iAuto_ID = 0;
			checkSanPham = false;
			checkSoLuong = false;
			checkDonGia = false;
			if (m_objData.San_Pham_ID == 0)
			{
				checkSanPham = true;
			}
			else if (m_objData.SL_Xuat == 0)
			{
				checkSoLuong = true;
			}
			else if (m_objData.Don_Gia_Xuat == 0)
			{
				checkDonGia = true;
			}
			else
			{
				CXNK_Xuat_Kho_Raw_Data v_objClone = new();
				CUtility.Clone_Entity(m_objData, v_objClone);
				r_objDes = v_objClone;
			}
		}
		else
		{
			CXNK_Xuat_Kho_Raw_Data_Controller v_objCtrData = new();
			m_objData.Last_Updated_By = r_strActive_User_Name;
			m_objData.Last_Updated_By_Function = r_strActive_Function_Code;

			v_objCtrData.FQ_734_XKRD_sp_upd_Update(m_objData);

			// Đoạn code lưu key cho việc tracking log CRUD, vui lòng đừng xóa
			CXNK_Xuat_Kho_Raw_Data v_objClone = new();
			CUtility.Clone_Entity(m_objData, v_objClone);
			r_objDes = v_objClone;
			// End tracking
		}
	}
}
