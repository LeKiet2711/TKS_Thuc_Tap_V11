@inherits FBase_Edit;

<PageTitle>Report Viewer</PageTitle>

<div class="modal fade show" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-left: 0px; background-color: rgba(10, 10, 10, .8);">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
            <div class="modal-header bg-light">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="@(()=> Modal_Cancel())">
                </button>
            </div>
            <ReportViewer ServiceUrl="/api/reports"
                          @bind-ReportSource="@ReportSource"
                          @bind-ScaleMode="@ScaleMode"
                          @bind-ViewMode="@ViewMode"
                          @bind-ParametersAreaVisible="@ParametersAreaVisible"
                          @bind-DocumentMapVisible="@DocumentMapVisible"
                          @bind-Scale="@Scale"
                          PageMode="@PageMode.ContinuousScroll"
                          PrintMode="@PrintMode.AutoSelect"
                          KeepClientAlive="true"
                          EnableSendEmail="true"
                          ServiceType="@ReportViewerServiceType.REST"
                          Height="900px"
                          Width="100%">
                <ReportViewerSettings>
                    <SendEmailDialogSettings
                        From="from@example.com"
                        To="to@example.com"
                        Cc="cc@example.com"
                        Subject="Report sent"
                        Format="CSV"
                        Body="Attached report. <br/> <br/> Best regards, </br> ABC">
                    </SendEmailDialogSettings>
                </ReportViewerSettings>
            </ReportViewer>
        </div>
    </div>
</div>

@code {
    public ScaleMode ScaleMode { get; set; } = ScaleMode.Specific;
    public ViewMode ViewMode { get; set; } = ViewMode.Interactive;
    public bool ParametersAreaVisible { get; set; }
    public bool DocumentMapVisible { get; set; }
    public double Scale { get; set; } = 1.0;

    [Parameter]
    public long Nhap_Kho_ID { get; set; }


    public ReportSourceOptions ReportSource { get; set; } = new ReportSourceOptions("rpt2011_A_M1_Phieu_Nhap_Kho_default.trdp", new Dictionary<string, object>
    {
        // Add parameters if applicable
    });

    protected override async Task OnInitializedAsync()
    {
        CXNK_Nhap_Kho_Controller v_objCtrData = new();
        CXNK_Nhap_Kho v_objData = v_objCtrData.FQ_718_NK_sp_sel_Get_By_ID(Convert.ToInt32(Nhap_Kho_ID));
        CNumber cNum = new();
        CXNK_Nhap_Kho_Raw_Data_Controller v_objCtrRawData = new();
        double v_iNum = v_objCtrRawData.CalculateTotalAmount(Convert.ToInt32(Nhap_Kho_ID));


        ReportSource.Parameters.Add("Nhap_Kho_ID", Nhap_Kho_ID);
        ReportSource.Parameters.Add("Ten_Kho", v_objData.Ten_Kho);
        ReportSource.Parameters.Add("Ten_NCC", v_objData.Ten_NCC);  
        ReportSource.Parameters.Add("So_Phieu_Nhap_Kho", v_objData.So_Phieu_Nhap_Kho);
        ReportSource.Parameters.Add("TongTienBangChu", cNum.ReadInt(v_iNum.ToString(), "VND"));
    }
}
